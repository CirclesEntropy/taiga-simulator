module Simulator.PartialTx;

open import Stdlib.Prelude;
open import Simulator.Resource;

import Data.Set as Set;
import Data.Set.AVL as AVL;
open AVL using {AVLTraits};
open Set using {Set;SetTraits};

type PartialTx :=
  | partialTx : Set Resource -> Set Resource -> PartialTx;

partialtx-ordering : Ord PartialTx;
partialtx-ordering :=
  let
    prod : PartialTx -> Set Resource × Set Resource;
    prod (partialTx inr outr) := inr, outr;
    setResourceOrd : Ord (Set Resource);
    setResourceOrd := AVLTraits.Ord resource-ordering;
    prodOrd : Ord (Set Resource × Set Resource);
    prodOrd := ProductTraits.Ord setResourceOrd setResourceOrd;
    go :
        Ord (Set Resource × Set Resource)
          -> PartialTx
          -> PartialTx
          -> Ordering;
    go (mkOrd prod-ord) p1 p2 := prod-ord (prod p1) (prod p2);
  in mkOrd (go prodOrd);
