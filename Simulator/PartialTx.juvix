module Simulator.PartialTx;

open import Stdlib.Prelude;
open import Simulator.Resource;

--- TODO: There should be exactly 2 created and 2 consumed resources.
type PartialTx :=
  | --- A partial transaction consists of a set of consumed resources and a set
    --- of created resources
    partialTx : List Resource -> List Resource -> PartialTx;

partialTxOrd : Ord PartialTx;
partialTxOrd :=
  let
    prod : PartialTx -> List Resource × List Resource;
    prod (partialTx inr outr) := inr, outr;
    listResourceOrd : Ord (List Resource);
    listResourceOrd := ListTraits.Ord resourceOrd;
    prodOrd : Ord (List Resource × List Resource);
    prodOrd :=
      ProductTraits.Ord listResourceOrd listResourceOrd;
    go :
        Ord (List Resource × List Resource)
          -> PartialTx
          -> PartialTx
          -> Ordering;
    go (mkOrd prod-ord) p1 p2 := prod-ord (prod p1) (prod p2);
  in mkOrd (go prodOrd);
